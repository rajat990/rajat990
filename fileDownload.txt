-----------------------------------------file downloading function----------------------------------------------
public @ResponseBody String uploadFileHandler(
//					 MultipartFile file, HttpServletRequest request) {
//
//				if (!file.isEmpty()) {
//					try {
//						byte[] bytes = file.getBytes();
//
//						// Creating the directory to store file
// Creating the directory to store file
// Creating the directory to store file
//						String rootPath = request.getServletContext().getRealPath("/");
//						System.out.println(rootPath);
//						File dir = new File(rootPath + File.separator + "uploads/images/profile/");
//						if (!dir.exists())
//							dir.mkdirs();
//
//						// Create the file on server
//						File serverFile = new File(dir.getAbsolutePath()
//								+ File.separator + file.getOriginalFilename());
//						BufferedOutputStream stream = new BufferedOutputStream(
//								new FileOutputStream(serverFile));
//						stream.write(bytes);
//						stream.close();
//
////						logger.info("Server File Location="
////								+ serverFile.getAbsolutePath());
//
//						return "You successfully uploaded file=";
//					} catch (Exception e) {
//						return "You failed to upload "  + " => " + e.getMessage();
//					}
//				} else {
//					return "You failed to upload " 
//							+ " because the file was empty.";
//				}
//			}
--------------------------------------------------------------------------------------------------------------------------------------
//View QRCode
//View QRCode
//View QRCode//View QRCode
//			 @RequestMapping(value = "/downloadQRCode/{id}", method = RequestMethod.GET)
//			 public ModelAndView changeStatus(@PathVariable("id") int id, Model model,HttpSession session
//					 ,HttpServletRequest request) {
//				 if(session.getAttribute("userName")!=null) {
//					 String QRCode_image = qrcodeService.getQRCode(id);		
//					 System.out.println(QRCode_image+"????????");	
//					 downloadFile(id,request);
//					 Map<String, Object> model1 = new HashMap<String, Object>();
//				        model1.put("QRCode_image", QRCode_image);
//				        
//				        return new ModelAndView("redirect:/showQRCode");
//						
//				 }else {
//					 Map<String, Object> model1 = new HashMap<String, Object>();
//						model1.put("msg", "0");
//						return new ModelAndView("index", "model1", model1);
//				 }
//			 }
-----------------------------------------------------------------------------------------------------------------------------------------------------------------			 
//			 @RequestMapping(value = "/downloadQRCode/{id}", method = RequestMethod.GET)
//			    public ResponseEntity<Resource> downloadFile(@PathVariable("id")int id,HttpServletRequest request
//			    )  {
//			        // Load file as Resource
//				 String rootPath = request.getServletContext().getRealPath("/")+ "uploads/images/profile/";
//				 String QRCode_image = qrcodeService.getQRCode(id);
//				 String fileName=QRCode_image;
//				
//			        Resource resource = fileStorageService.loadFileAsResource(fileName,rootPath);
//
//			        // Try to determine file's content type
//			        String contentType = null;
//			        try {
//			            contentType = request.getServletContext().getMimeType(resource.getFile().getAbsolutePath());
//			        } catch (IOException ex) {
//			            logger.info("Could not determine file type.");
//			        }
//
//			        // Fallback to the default content type if type could not be determined
//			        if(contentType == null) {
//			            contentType = "application/octet-stream";
//			        }
////			        HttpHeaders header = new HttpHeaders();
////			        header.setContentType(MediaType.parseMediaType(contentType));
////			        header.set(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=\"" + resource.getFilename()+ "\"");
//			        
//			       // response.setContentType(MediaType.parseMediaType(contentType));
//			       // response.setHeader(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=\"" + resource.getFilename()+ "\"");
//			       
//			      
//			     
//			        return ResponseEntity.ok()
//			                .contentType(MediaType.parseMediaType(contentType))
//			                .header(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=\"" + resource.getFilename()+ "\"")
//			                .body(resource)
//			                ;
//			                
//			    }
-------------------------------------------------------------------------------------------------------------------------------------------------------------
